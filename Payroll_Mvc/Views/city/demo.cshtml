@model BusinessLayer.City

@{
    ViewBag.Title = "demo";
}

<h2>demo</h2>



@using (Html.BeginForm("Create", "city", FormMethod.Post, new { id = "CountryStateFormId", data_stateListAlocation = Url.Action("StateList") }))
{
    @Html.AntiForgeryToken()

    @section scripts {
        <script type="text/javascript">
        $(document).ready(function () {
            // Get a list of categories and a list of products of the first category.
            $.getJSON('/home/city', null, function (data) {
                $.each(data, function () {
                    $('#countries').append('<option value=' +
                      this.Id + '>' + this.CountryName + '</option>');
                });
                $.getJSON('/home/city', { intCatID: $('#category').val() }, function (data) {
                    $.each(data, function () {
                        $('#state').append('<option value=' +
                          this.Id + '>' + this.State + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting products!');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting categories!');
            });

            // Dropdown list change event.
            $('#countries').change(function () {
                $('#state option').remove();
                $.getJSON('/home/city', { intCatID: $('#countries').val() }, function (data) {
                    $.each(data, function () {
                        $('#state').append('<option value=' +
                          this.Id + '>' + this.State + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting products!');
                });
            });
        });
        </script>



        <div class="form-horizontal">
            <h4>City</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @*@Html.DropDownList("countries",ViewBag.countries as SelectList, "Select Country",new {id= "countries" })*@
                    <select id="countries"></select>
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.CountryId, new { htmlAttributes = new { @class = "form-control" } })
                    *@
                    @*@Html.DropDownList("State", new SelectList(string.Empty, "Value", "Text"), "select State", new { style = "width:250px", @class = "dropdown1" })*@
                    @*@Html.DropDownList("countries", "Select Country")*@
                    <select id="state"></select>
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


